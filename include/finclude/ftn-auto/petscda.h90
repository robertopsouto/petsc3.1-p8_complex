        subroutine DACreateGlobalVector(da, g ,ierr)
       DA da ! DA
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DACreateNaturalVector(da, g ,ierr)
       DA da ! DA
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DALocalToLocalBegin(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DALocalToLocalEnd(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DASetCoordinates(da, c ,ierr)
       DA da ! DA
       Vec c ! Vec
       integer ierr
       end subroutine
        subroutine DAGetCoordinates(da, c ,ierr)
       DA da ! DA
       Vec c ! Vec
       integer ierr
       end subroutine
        subroutine DAGetCoordinateDA(da, cda ,ierr)
       DA da ! DA
       DA cda ! DA
       integer ierr
       end subroutine
        subroutine DAGetGhostedCoordinates(da, c ,ierr)
       DA da ! DA
       Vec c ! Vec
       integer ierr
       end subroutine
        subroutine DAGetCorners(da, x, y, z, m, n, p ,ierr)
       DA da ! DA
       PetscInt x ! PetscInt
       PetscInt y ! PetscInt
       PetscInt z ! PetscInt
       PetscInt m ! PetscInt
       PetscInt n ! PetscInt
       PetscInt p ! PetscInt
       integer ierr
       end subroutine
        subroutine DAGetLocalBoundingBox(da, lmin, lmax ,ierr)
       DA da ! DA
       PetscReal lmin (*) ! PetscReal
       PetscReal lmax (*) ! PetscReal
       integer ierr
       end subroutine
        subroutine DAGetBoundingBox(da, gmin, gmax ,ierr)
       DA da ! DA
       PetscReal gmin (*) ! PetscReal
       PetscReal gmax (*) ! PetscReal
       integer ierr
       end subroutine
        subroutine DACreateLocalVector(da, g ,ierr)
       DA da ! DA
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DMGetLocalVector(dm, g ,ierr)
       DM dm ! DM
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DMRestoreLocalVector(dm, g ,ierr)
       DM dm ! DM
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DMGetGlobalVector(dm, g ,ierr)
       DM dm ! DM
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DMRestoreGlobalVector(dm, g ,ierr)
       DM dm ! DM
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DALocalToGlobal(da, l, mode, g ,ierr)
       DA da ! DA
       Vec l ! Vec
       InsertMode mode ! InsertMode
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DAGetAO(da, ao ,ierr)
       DA da ! DA
       AO ao ! AO
       integer ierr
       end subroutine
        subroutine DAViewFromOptions(da, title ,ierr)
       DA da ! DA
       character title (*) ! char
       integer ierr
       end subroutine
        subroutine DASetFromOptions(da ,ierr)
       DA da ! DA
       integer ierr
       end subroutine
        subroutine DACreate(comm, da ,ierr)
       integer comm ! MPI_Comm
       DA da ! DA
       integer ierr
       end subroutine
        subroutine DAGetGhostCorners(da, x, y, z, m, n, p ,ierr)
       DA da ! DA
       PetscInt x ! PetscInt
       PetscInt y ! PetscInt
       PetscInt z ! PetscInt
       PetscInt m ! PetscInt
       PetscInt n ! PetscInt
       PetscInt p ! PetscInt
       integer ierr
       end subroutine
        subroutine DASetDim(da, dim ,ierr)
       DA da ! DA
       PetscInt dim ! PetscInt
       integer ierr
       end subroutine
        subroutine DASetSizes(da, M, N, P ,ierr)
       DA da ! DA
       PetscInt M ! PetscInt
       PetscInt N ! PetscInt
       PetscInt P ! PetscInt
       integer ierr
       end subroutine
        subroutine DASetNumProcs(da, m, n, p ,ierr)
       DA da ! DA
       PetscInt m ! PetscInt
       PetscInt n ! PetscInt
       PetscInt p ! PetscInt
       integer ierr
       end subroutine
        subroutine DASetPeriodicity(da, ptype ,ierr)
       DA da ! DA
       DAPeriodicType ptype ! DAPeriodicType
       integer ierr
       end subroutine
        subroutine DASetDof(da, dof ,ierr)
       DA da ! DA
       integer dof ! int
       integer ierr
       end subroutine
        subroutine DASetStencilType(da, stype ,ierr)
       DA da ! DA
       DAStencilType stype ! DAStencilType
       integer ierr
       end subroutine
        subroutine DASetStencilWidth(da, width ,ierr)
       DA da ! DA
       integer width ! int
       integer ierr
       end subroutine
        subroutine DASetVertexDivision(da, lx, ly, lz ,ierr)
       DA da ! DA
       PetscInt lx (*) ! PetscInt
       PetscInt ly (*) ! PetscInt
       PetscInt lz (*) ! PetscInt
       integer ierr
       end subroutine
        subroutine DASetInterpolationType(da, ctype ,ierr)
       DA da ! DA
       DAInterpolationType ctype ! DAInterpolationType
       integer ierr
       end subroutine
        subroutine DASetRefinementFactor(da, refine_x, refine_y,        &
     &refine_z ,ierr)
       DA da ! DA
       PetscInt refine_x ! PetscInt
       PetscInt refine_y ! PetscInt
       PetscInt refine_z ! PetscInt
       integer ierr
       end subroutine
        subroutine DARefine(da, comm, daref ,ierr)
       DA da ! DA
       integer comm ! MPI_Comm
       DA daref ! DA
       integer ierr
       end subroutine
        subroutine DACoarsen(da, comm, daref ,ierr)
       DA da ! DA
       integer comm ! MPI_Comm
       DA daref ! DA
       integer ierr
       end subroutine
        subroutine DARefineHierarchy(da, nlevels, daf ,ierr)
       DA da ! DA
       PetscInt nlevels ! PetscInt
       DA daf (*) ! DA
       integer ierr
       end subroutine
        subroutine DACoarsenHierarchy(da, nlevels, dac ,ierr)
       DA da ! DA
       PetscInt nlevels ! PetscInt
       DA dac (*) ! DA
       integer ierr
       end subroutine
        subroutine DADestroy(da ,ierr)
       DA da ! DA
       integer ierr
       end subroutine
        subroutine DAGetISLocalToGlobalMapping(da, map ,ierr)
       DA da ! DA
       ISLocalToGlobalMapping map ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine DAGetISLocalToGlobalMappingBlck(da, map ,ierr)
       DA da ! DA
       ISLocalToGlobalMapping map ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine DAGlobalToNaturalAllCreate(da, scatter ,ierr)
       DA da ! DA
       VecScatter scatter ! VecScatter
       integer ierr
       end subroutine
        subroutine DANaturalAllToGlobalCreate(da, scatter ,ierr)
       DA da ! DA
       VecScatter scatter ! VecScatter
       integer ierr
       end subroutine
        subroutine DAVecRestoreArray(da, vec, array ,ierr)
       DA da ! DA
       Vec vec ! Vec
       PetscVoid array ! void
       integer ierr
       end subroutine
        subroutine DAVecRestoreArrayDOF(da, vec, array ,ierr)
       DA da ! DA
       Vec vec ! Vec
       PetscVoid array ! void
       integer ierr
       end subroutine
        subroutine DASetUniformCoordinates(da, xmin, xmax, ymin, ymax,  &
     &zmin, zmax ,ierr)
       DA da ! DA
       PetscReal xmin ! PetscReal
       PetscReal xmax ! PetscReal
       PetscReal ymin ! PetscReal
       PetscReal ymax ! PetscReal
       PetscReal zmin ! PetscReal
       PetscReal zmax ! PetscReal
       integer ierr
       end subroutine
        subroutine DAFormFunction(da, lf, vu, vfu, w ,ierr)
       DA da ! DA
       external lf ! void function pointer
       Vec vu ! Vec
       Vec vfu ! Vec
       PetscVoid w ! void
       integer ierr
       end subroutine
        subroutine DAFormFunction1(da, vu, vfu, w ,ierr)
       DA da ! DA
       Vec vu ! Vec
       Vec vfu ! Vec
       PetscVoid w ! void
       integer ierr
       end subroutine
        subroutine DAFormFunctioni1(da, i, vu, vfu, w ,ierr)
       DA da ! DA
       PetscInt i ! PetscInt
       Vec vu ! Vec
       PetscScalar vfu ! PetscScalar
       PetscVoid w ! void
       integer ierr
       end subroutine
        subroutine DAFormFunctionib1(da, i, vu, vfu, w ,ierr)
       DA da ! DA
       PetscInt i ! PetscInt
       Vec vu ! Vec
       PetscScalar vfu ! PetscScalar
       PetscVoid w ! void
       integer ierr
       end subroutine
        subroutine DAComputeJacobian1(da, vu, J, w ,ierr)
       DA da ! DA
       Vec vu ! Vec
       Mat J ! Mat
       PetscVoid w ! void
       integer ierr
       end subroutine
        subroutine DMGetInterpolationScale(dac, daf, mat, scale ,ierr)
       DM dac ! DM
       DM daf ! DM
       Mat mat ! Mat
       Vec scale ! Vec
       integer ierr
       end subroutine
        subroutine DAGetInjection(dac, daf, inject ,ierr)
       DA dac ! DA
       DA daf ! DA
       VecScatter inject ! VecScatter
       integer ierr
       end subroutine
        subroutine DAGetAggregates(dac, daf, rest ,ierr)
       DA dac ! DA
       DA daf ! DA
       Mat rest ! Mat
       integer ierr
       end subroutine
        subroutine DAGlobalToLocalBegin(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DALocalToGlobalBegin(da, l, g ,ierr)
       DA da ! DA
       Vec l ! Vec
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DALocalToGlobalEnd(da, l, g ,ierr)
       DA da ! DA
       Vec l ! Vec
       Vec g ! Vec
       integer ierr
       end subroutine
        subroutine DAGlobalToLocalEnd(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DAGlobalToNaturalBegin(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DAGlobalToNaturalEnd(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DANaturalToGlobalBegin(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DANaturalToGlobalEnd(da, g, mode, l ,ierr)
       DA da ! DA
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine SDADestroy(sda ,ierr)
       SDA sda ! SDA
       integer ierr
       end subroutine
        subroutine SDALocalToLocalBegin(sda, g, mode, l ,ierr)
       SDA sda ! SDA
       PetscScalar g ! PetscScalar
       InsertMode mode ! InsertMode
       PetscScalar l ! PetscScalar
       integer ierr
       end subroutine
        subroutine SDALocalToLocalEnd(sda, g, mode, l ,ierr)
       SDA sda ! SDA
       PetscScalar g ! PetscScalar
       InsertMode mode ! InsertMode
       PetscScalar l ! PetscScalar
       integer ierr
       end subroutine
        subroutine DASetMatPreallocateOnly(da, only ,ierr)
       DA da ! DA
       PetscTruth only ! PetscTruth
       integer ierr
       end subroutine
        subroutine DASetBlockFills(da, dfill, ofill ,ierr)
       DA da ! DA
       PetscInt dfill ! PetscInt
       PetscInt ofill ! PetscInt
       integer ierr
       end subroutine
        subroutine DAGetColoring(da, ctype, mtype, coloring ,ierr)
       DA da ! DA
       ISColoringType ctype ! ISColoringType
       MatType mtype ! MatType
       ISColoring coloring ! ISColoring
       integer ierr
       end subroutine
        subroutine MatSetDA(mat, da ,ierr)
       Mat mat ! Mat
       DA da ! DA
       integer ierr
       end subroutine
        subroutine DMCompositeSetContext(dmcomposite, ctx ,ierr)
       DMComposite dmcomposite ! DMComposite
       PetscVoid ctx ! void
       integer ierr
       end subroutine
        subroutine DMCompositeGetContext(dmcomposite, ctx ,ierr)
       DMComposite dmcomposite ! DMComposite
       PetscVoid ctx ! void
       integer ierr
       end subroutine
        subroutine DMCompositeView(packer, v ,ierr)
       DMComposite packer ! DMComposite
       PetscViewer v ! PetscViewer
       integer ierr
       end subroutine
        subroutine DMCompositeGetColoring(dmcomposite, ctype, mtype,    &
     &coloring ,ierr)
       DMComposite dmcomposite ! DMComposite
       ISColoringType ctype ! ISColoringType
       MatType mtype ! MatType
       ISColoring coloring ! ISColoring
       integer ierr
       end subroutine
        subroutine DMDestroy(dm ,ierr)
       DM dm ! DM
       integer ierr
       end subroutine
        subroutine DMView(dm, v ,ierr)
       DM dm ! DM
       PetscViewer v ! PetscViewer
       integer ierr
       end subroutine
        subroutine DMCreateGlobalVector(dm, vec ,ierr)
       DM dm ! DM
       Vec vec ! Vec
       integer ierr
       end subroutine
        subroutine DMCreateLocalVector(dm, vec ,ierr)
       DM dm ! DM
       Vec vec ! Vec
       integer ierr
       end subroutine
        subroutine DMGetInterpolation(dm1, dm2, mat, vec ,ierr)
       DM dm1 ! DM
       DM dm2 ! DM
       Mat mat ! Mat
       Vec vec ! Vec
       integer ierr
       end subroutine
        subroutine DMGetInjection(dm1, dm2, ctx ,ierr)
       DM dm1 ! DM
       DM dm2 ! DM
       VecScatter ctx ! VecScatter
       integer ierr
       end subroutine
        subroutine DMGetColoring(dm, ctype, mtype, coloring ,ierr)
       DM dm ! DM
       ISColoringType ctype ! ISColoringType
       MatType mtype ! MatType
       ISColoring coloring ! ISColoring
       integer ierr
       end subroutine
        subroutine DMRefine(dm, comm, dmf ,ierr)
       DM dm ! DM
       integer comm ! MPI_Comm
       DM dmf ! DM
       integer ierr
       end subroutine
        subroutine DMGlobalToLocalBegin(dm, g, mode, l ,ierr)
       DM dm ! DM
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DMGlobalToLocalEnd(dm, g, mode, l ,ierr)
       DM dm ! DM
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DMLocalToGlobal(dm, g, mode, l ,ierr)
       DM dm ! DM
       Vec g ! Vec
       InsertMode mode ! InsertMode
       Vec l ! Vec
       integer ierr
       end subroutine
        subroutine DMCoarsen(dm, comm, dmc ,ierr)
       DM dm ! DM
       integer comm ! MPI_Comm
       DM dmc ! DM
       integer ierr
       end subroutine
        subroutine DMGetAggregates(dmc, dmf, rest ,ierr)
       DM dmc ! DM
       DM dmf ! DM
       Mat rest ! Mat
       integer ierr
       end subroutine
        subroutine ADDADestroy(adda ,ierr)
       ADDA adda ! ADDA
       integer ierr
       end subroutine
        subroutine ADDAView(adda, v ,ierr)
       ADDA adda ! ADDA
       PetscViewer v ! PetscViewer
       integer ierr
       end subroutine
        subroutine ADDACreateGlobalVector(adda, vec ,ierr)
       ADDA adda ! ADDA
       Vec vec ! Vec
       integer ierr
       end subroutine
        subroutine ADDAGetColoring(adda, ctype, mtype, coloring ,ierr)
       ADDA adda ! ADDA
       ISColoringType ctype ! ISColoringType
       MatType mtype ! MatType
       ISColoring coloring ! ISColoring
       integer ierr
       end subroutine
        subroutine ADDAGetMatrix(adda, mtype, mat ,ierr)
       ADDA adda ! ADDA
       MatType mtype ! MatType
       Mat mat ! Mat
       integer ierr
       end subroutine
        subroutine ADDAGetMatrixNS(addar, addac, mtype, mat ,ierr)
       ADDA addar ! ADDA
       ADDA addac ! ADDA
       MatType mtype ! MatType
       Mat mat ! Mat
       integer ierr
       end subroutine
        subroutine ADDAGetInterpolation(adda1, adda2, mat, vec ,ierr)
       ADDA adda1 ! ADDA
       ADDA adda2 ! ADDA
       Mat mat ! Mat
       Vec vec ! Vec
       integer ierr
       end subroutine
        subroutine ADDARefine(adda, comm, addaf ,ierr)
       ADDA adda ! ADDA
       integer comm ! MPI_Comm
       ADDA addaf ! ADDA
       integer ierr
       end subroutine
        subroutine ADDACoarsen(adda, comm, addac ,ierr)
       ADDA adda ! ADDA
       integer comm ! MPI_Comm
       ADDA addac ! ADDA
       integer ierr
       end subroutine
        subroutine ADDAGetInjection(adda1, adda2, ctx ,ierr)
       ADDA adda1 ! ADDA
       ADDA adda2 ! ADDA
       VecScatter ctx ! VecScatter
       integer ierr
       end subroutine
        subroutine ADDASetRefinement(adda, refine, dofrefine ,ierr)
       ADDA adda ! ADDA
       PetscInt refine ! PetscInt
       PetscInt dofrefine ! PetscInt
       integer ierr
       end subroutine
        subroutine ADDAGetCorners(adda, lcorner, ucorner ,ierr)
       ADDA adda ! ADDA
       PetscInt lcorner ! PetscInt
       PetscInt ucorner ! PetscInt
       integer ierr
       end subroutine
        subroutine ADDAGetGhostCorners(adda, lcorner, ucorner ,ierr)
       ADDA adda ! ADDA
       PetscInt lcorner ! PetscInt
       PetscInt ucorner ! PetscInt
       integer ierr
       end subroutine
